name: Build mini example

on:
  workflow_dispatch:
  push: 
    branches: master

permissions:
  contents: write

jobs:
    build:
      name: Build
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          go-version: ["1.16", "1.17", "1.18", "1.19", "1.20", "1.21"]
          arch: [amd64]
          os: ['windows-latest', 'macos-latest', 'ubuntu-latest']
          include:
            - os: windows-latest
              platform: windows
            - os: macos-latest
              platform: darwin
            - os: ubuntu-latest
              platform: linux
        fail-fast: true
      steps:
        - name: Install Go
          uses: actions/setup-go@v5
          with:
            go-version: ${{ matrix.go-version }}
            cache: false
  
        - name: Checkout code
          uses: actions/checkout@v4
  
        - name: Build pure exe
          run: |
            go build -buildmode=exe -o bin-${{ matrix.platform }}-${{ matrix.go-version }}-${{ matrix.arch }} .
            go build -buildmode=exe -ldflags="-s -w" -o bin-${{ matrix.platform }}-${{ matrix.go-version }}-${{ matrix.arch }}-strip .
          env:
            GOOS: ${{ matrix.platform }}
            GOARCH: ${{ matrix.arch }}
        
        - name: Build pure pie
          run: |
            go build -buildmode=pie -o bin-${{ matrix.platform }}-${{ matrix.go-version }}-${{ matrix.arch }}-pie .
            go build -buildmode=pie -ldflags="-s -w" -o bin-${{ matrix.platform }}-${{ matrix.go-version }}-${{ matrix.arch }}-strip-pie .

        - name: Build cgo exe
          run: |
            go build -buildmode=exe -ldflags="-linkmode external" -o bin-${{ matrix.platform }}-${{ matrix.go-version }}-${{ matrix.arch }}-ext .
            go build -buildmode=exe -ldflags="-s -w -linkmode external" -o bin-${{ matrix.platform }}-${{ matrix.go-version }}-${{ matrix.arch }}-strip-ext .
          env:
            GOOS: ${{ matrix.platform }}
            GOARCH: ${{ matrix.arch }}
            CGO_ENABLED: 1
        
        - name: Build cgo pie
          run: |
            go build -buildmode=pie -ldflags="-linkmode external" -o bin-${{ matrix.platform }}-${{ matrix.go-version }}-${{ matrix.arch }}-ext-pie .
            go build -buildmode=pie -ldflags="-s -w -linkmode external" -o bin-${{ matrix.platform }}-${{ matrix.go-version }}-${{ matrix.arch }}-strip-ext-pie .
          env:
            GOOS: ${{ matrix.platform }}
            GOARCH: ${{ matrix.arch }}
            CGO_ENABLED: 1
  
        - name: Upload artifacts
          uses: actions/upload-artifact@v4
          with:
            name: bin-${{ matrix.platform }}-${{ matrix.go-version }}-${{ matrix.arch }}
            path: |
              ./bin-${{ matrix.platform }}-${{ matrix.go-version }}-${{ matrix.arch }}

    release:
      needs: build
      runs-on: ubuntu-latest
      steps:
        - name: Download artifacts
          uses: actions/download-artifact@v4
          with:
            path: artifacts
            merge-multiple: true
  
        - name: Create Release
          uses: softprops/action-gh-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: latest
            name: "Release"
            files: "./artifacts/*"
            prerelease: true